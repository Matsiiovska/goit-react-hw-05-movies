{"version":3,"file":"static/js/257.0ccaae76.chunk.js","mappings":"mTAQAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzB,IAAMC,EAAU,mCAEHC,EAAU,mCAAG,oGACDF,EAAAA,EAAAA,IAAA,qCAAwCC,IADvC,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qDAKVC,EAAoB,mCAAG,WAAMC,GAAN,uFACXP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFnD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAQpBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,EAAAA,IAAA,gBACZS,EADY,oBACOR,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBM,EAAW,mCAAG,WAAMD,GAAN,uFACFT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,oBADE,cACnBE,EADmB,yBAIlBA,EAASC,KAAKO,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMH,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD,iKCrCZQ,EAAYC,EAAAA,EAAAA,IAAH,yEAMTC,EAASD,EAAAA,EAAAA,GAAH,2IASNE,EAASF,EAAAA,EAAAA,GAAH,+JAUNG,GAASH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,oJAWNK,EAASL,EAAAA,EAAAA,OAAH,mS,SC0DnB,EA3FqB,WAAO,IAAD,IACjBL,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAAwBY,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAqBjB,IAnBAC,EAAAA,EAAAA,YAAU,WAENH,GAAW,IAEXjB,EAAAA,EAAAA,IAAkBC,GACfoB,MAAK,SAAAC,GACJP,EAAQO,EACT,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPV,GAAW,EACZ,GAIN,GAAE,CAAChB,IAECa,EAAL,CAIA,MAQIA,GAAQ,CAAC,EAPXc,EADF,EACEA,MACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,OACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,eAGF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAE,oBAAEjB,EAASkB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,SAAC1B,EAAD,CAAQ2B,KAAK,SAAb,SAAsB,cAEvBtB,IAAW,SAACuB,EAAA,EAAD,IAEXzB,IACC,UAACT,EAAD,YACE,gBACEmC,MAAM,QACNC,IACER,EAAW,yCAC2BA,GAD3B,6EAIbS,IAAKR,KAEP,4BACE,0BACGN,EAAM,KAAGC,EAAac,MAAM,EAAG,GAAG,QAErC,yBAAG,eAAab,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,SAACxB,EAAD,UACGyB,EAAOY,KAAI,SAAAC,GAAG,OACb,wBAAkBA,EAAIC,MAAbD,EAAIE,GADA,aAOvB,mBACA,4BACE,wBAAI,4BACJ,UAACvC,EAAD,YACE,yBACE,SAACC,EAAD,CAAQ0B,GAAG,OAAX,SAAkB,YAEpB,yBACE,SAAC1B,EAAD,CAAQ0B,GAAG,UAAX,SAAqB,kBAGzB,mBACA,SAAC,KAAD,SA1DL,CA8DF,C","sources":["Api/Api.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["\n\n//https://api.themoviedb.org/3/trending/all/day?language=en-US' \\найпоп фільми\n//https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1' \\пошук фільмів за ключовим словом\n//https://api.themoviedb.org/3/movie/movie_id?language=en-US' \\запит повної інформації про фільм\n//https://api.themoviedb.org/3/movie/movie_id/credits?language=en-US' \\запит про акторський склад\n//https://api.themoviedb.org/3/movie/movie_id/reviews?language=en-US&page=1' \\запит оглядів\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\nexport const fetchTrend = async () => {//список найпопулярніших фільмів\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {//пошук фільмів за ключовим словом\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n//https://api.themoviedb.org/3/movie/movie_id?language=en-US' \\запит повної інформації про фільм\n\nexport const fetchMovieDetails = async movieId => {//отримуємо деталі про фільм\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {//список акторів за ід\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {//Список відгуків про фільм\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 30px;\n  gap: 30px;\n`;\n\nexport const ListUl = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListIn = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const LinkIn = styled(Link)`\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 20px;\n  color: black;\n\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 1px solid gray;\n  color: black;\n  font-weight: 700;\n  font-size: 20px;\n  border-radius: 5px 10px;\n\n  &:hover {\n    color: orange;\n    border: 1px solid orange;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport {Container, ListUl, ListIn, LinkIn, Button} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [info, setInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetailsFilms = () => {\n      setLoading(true);\n\n      fetchMovieDetails(movieId)\n        .then(detailMovie => {\n          setInfo(detailMovie);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchMovieDetailsFilms();\n  }, [movieId]);\n\n  if (!info) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = info || {};\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <Button type=\"button\">Go back</Button>\n      </Link>\n      {loading && <Loader />}\n\n      {info && (\n        <Container>\n          <img\n            width=\"400px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ListUl>\n              {genres.map(gen => (\n                <li key={gen.id}>{gen.name}</li>\n              ))}\n            </ListUl>\n          </div>\n        </Container>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ListIn>\n          <li>\n            <LinkIn to=\"cast\">Cast</LinkIn>\n          </li>\n          <li>\n            <LinkIn to=\"reviews\">Reviews</LinkIn>\n          </li>\n        </ListIn>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","fetchTrend","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","movieId","fetchActors","cast","fetchReviews","Container","styled","ListUl","ListIn","LinkIn","Link","Button","useParams","useState","info","setInfo","loading","setLoading","location","useLocation","useEffect","then","detailMovie","catch","error","console","log","finally","title","release_date","popularity","overview","genres","poster_path","original_title","to","state","from","type","Loader","width","src","alt","slice","map","gen","name","id"],"sourceRoot":""}
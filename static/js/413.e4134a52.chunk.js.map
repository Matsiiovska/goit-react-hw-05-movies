{"version":3,"file":"static/js/413.e4134a52.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/EdList/EdList.styled.jsx","components/EdList/EdList.jsx","components/FormaIn/FormaIn.styled.jsx","components/FormaIn/FormaIn.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["\n\n//https://api.themoviedb.org/3/trending/all/day?language=en-US' \\найпоп фільми\n//https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1' \\пошук фільмів за ключовим словом\n//https://api.themoviedb.org/3/movie/movie_id?language=en-US' \\запит повної інформації про фільм\n//https://api.themoviedb.org/3/movie/movie_id/credits?language=en-US' \\запит про акторський склад\n//https://api.themoviedb.org/3/movie/movie_id/reviews?language=en-US&page=1' \\запит оглядів\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\nexport const fetchTrend = async () => {//список найпопулярніших фільмів\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {//пошук фільмів за ключовим словом\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n//https://api.themoviedb.org/3/movie/movie_id?language=en-US' \\запит повної інформації про фільм\n\nexport const fetchMovieDetails = async movieId => {//отримуємо деталі про фільм\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {//список акторів за ід\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {//Список відгуків про фільм\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ListFilm = styled.ul`\n  list-style-type: none;\n`;\n\nexport const ItemLi = styled.li`\n  font-weight: 700;\n  font-size: 20px;\n  margin-bottom: 12px;\n`;\n\nexport const MovLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    color: orange;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { ListFilm, ItemLi, MovLink } from './EdList.styled';\n\nconst EdList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ListFilm>\n      {films.map(film => (\n        <ItemLi key={film.id}>\n          <MovLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovLink>\n        </ItemLi>\n      ))}\n    </ListFilm>\n  );\n};\n\nEdList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EdList;","import styled from '@emotion/styled';\n\nexport const ShForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 1px solid black;\n  font-weight: 700;\n  font-size: 20px;\n  margin-right: 13px;\n  border-radius: 5px 10px;\n  outline: none;\n\n  &:hover {\n    color: orange;\n    border: 1px solid orange;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 1px solid black;\n  color: black;\n  font-weight: 700;\n  font-size: 20px;\n  border-radius: 5px 10px;\n\n  &:hover {\n    color: orange;\n    border: 1px solid orange;\n  }\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ShForm, Input, Button } from './FormaIn.styled';\n\nconst FormaIn = ({ shMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    shMovies(query.toLowerCase());\n  };\n\n  return (\n    <ShForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </ShForm>\n  );\n};\n\nFormaIn.propTypes = {\n  shMovies: PropTypes.func.isRequired,\n};\n\nexport default FormaIn;","import React, { useState, useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport EdList from 'components/EdList/EdList';\nimport FormaIn from 'components/FormaIn/FormaIn';\nimport { fetchSearchByKeyword } from 'Api/Api';\nimport { useSearchParams, useNavigate } from 'react-router-dom'; // Изменено на useNavigate\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate(); \n\n    const query = searchParams.get('query') || '';\n\n  const handleSubmit = value => {\n\n    // Оновлюємо параметр 'query' в адресній строці\n    setSearchParams({ query: value });\n\n    navigate(`?query=${value}`);\n  };\n\n  useEffect(() => {\n    if (query) {\n      setLoading(true);\n      fetchSearchByKeyword(query)\n        .then(searchResults => {\n          setSearchFilms(searchResults);\n          setNoMoviesText(searchResults.length === 0);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <FormaIn shMovies={handleSubmit} />\n      {loading && <Loader />}\n      {noMoviesText && (\n        <p>За цим запитом фільми не знайдено. Будь ласка, спробуйте ще раз.</p>\n      )}\n      {searchFilms && <EdList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["axios","API_KEY","fetchTrend","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","movieId","fetchActors","cast","fetchReviews","ListFilm","styled","ItemLi","MovLink","Link","films","location","useLocation","map","film","to","id","state","from","title","ShForm","Input","Button","shMovies","useState","query","setQuery","onSubmit","e","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","loading","setLoading","noMoviesText","setNoMoviesText","useSearchParams","searchParams","setSearchParams","navigate","useNavigate","get","useEffect","then","searchResults","length","catch","error","console","log","finally","Loader","EdList"],"sourceRoot":""}